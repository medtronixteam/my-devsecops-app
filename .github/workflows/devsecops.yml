name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: GitGuardian Secrets Scan
    - name: Run GitGuardian Secrets Scan
      run: |
        pip install ggshield
        ggshield secret scan path . --recursive --verbose
      env:
        GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

    # Step 3: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Step 4: Install dependencies
    - name: Install Python Dependencies
      run: |
        pip install -r requirements.txt
        pip install pip-audit

    # Step 5: SAST using Semgrep
    - name: Run Semgrep (SAST)
      uses: returntocorp/semgrep-action@v1

    # Step 6: SCA using pip-audit
    - name: Run pip-audit (SCA)
      run: pip-audit

    # Step 7: IaC Scan (if using Terraform or Kubernetes YAML)
    - name: IaC Scan with Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .

    # Step 8: Docker build
    - name: Build Docker Image
      run: docker build -t my-secure-app .

    # Step 9: Docker Image Scan using Trivy
    - name: Trivy Scan (Docker Image)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: my-secure-app

        # Step 10: Login to AWS using credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 11: Push Docker Image to Amazon ECR (Optional)
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Push Image to ECR
      run: |
        docker tag my-secure-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-secure-app
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-secure-app

    # Step 12: Provision EC2 and Deploy using Terraform
    - name: Terraform Init & Apply
      run: |
        cd infrastructure
        terraform init
        terraform apply -auto-approve


    # Step 14: DAST Scan using OWASP ZAP
    - name: OWASP ZAP DAST Scan
      uses: zaproxy/action-full-scan@v0.7.0
      with:
        target: 'https://<YOUR_CLOUD_RUN_URL>'
